OrderedDict([('first_layer.weight', tensor([[-0.0785, -0.0261, -0.0251,  ..., -0.2343,  0.1417, -0.1644],
        [ 0.0021, -0.0034,  0.0676,  ...,  0.1744, -0.1553,  0.1961],
        [ 0.1435, -0.0694, -0.0882,  ...,  0.2042,  0.1446, -0.0058],
        ...,
        [ 0.0979, -0.2199, -0.1237,  ...,  0.0128,  0.2304,  0.0727],
        [ 0.0528,  0.0752, -0.1034,  ...,  0.0108, -0.0211, -0.1896],
        [ 0.1326, -0.2201, -0.0598,  ...,  0.0747, -0.0406, -0.0213]],
       device='cuda:0')), ('first_layer.bias', tensor([ 0.2430,  0.0218,  0.2035,  0.0136, -0.0149, -0.2052, -0.0289,  0.0916,
        -0.2013, -0.1349,  0.1126, -0.1762,  0.1549, -0.1323, -0.1842,  0.1946,
        -0.1340,  0.2160,  0.1787, -0.0188,  0.1235,  0.2110,  0.0101,  0.1093,
        -0.0394,  0.1818,  0.1316,  0.1723, -0.0062,  0.1111,  0.1970, -0.0131,
         0.1301, -0.2293,  0.1742,  0.2304, -0.1149, -0.1764, -0.0266,  0.1545,
         0.1268, -0.1236,  0.1084,  0.1780,  0.0907, -0.1416,  0.0794, -0.1679,
         0.0831, -0.2031, -0.0133, -0.0574, -0.1361,  0.1684,  0.0342,  0.0594,
         0.2669,  0.1893,  0.1872,  0.1829, -0.0077, -0.0025,  0.1770,  0.1310,
         0.1798,  0.1318,  0.1374, -0.0123,  0.2833, -0.0262,  0.0719,  0.1284,
         0.2099, -0.1214, -0.1370,  0.2703, -0.0210,  0.0715, -0.0401,  0.1874,
        -0.0325,  0.2083,  0.2174,  0.0768,  0.0147, -0.0596, -0.0885, -0.0016,
        -0.0193,  0.1880, -0.1872, -0.1194, -0.2330,  0.0437, -0.0700, -0.1495,
         0.3092,  0.2316, -0.2065,  0.1693, -0.1029, -0.0381,  0.0502,  0.1854,
        -0.1595,  0.1934, -0.0577,  0.0477, -0.1014,  0.0460, -0.1745, -0.1724,
        -0.0323,  0.1178,  0.0484, -0.1109,  0.0523, -0.0527,  0.1414,  0.0311,
         0.2083,  0.1954,  0.2037,  0.0885, -0.2447, -0.0165,  0.1900,  0.0173],
       device='cuda:0')), ('last_layer.weight', tensor([[ 7.1672e-02, -1.1957e-03,  7.1078e-02, -4.4954e-02,  4.4871e-02,
          2.2651e-02, -2.4226e-02, -1.1421e-01, -5.7419e-02, -3.7253e-02,
         -2.7708e-02, -6.0502e-02,  8.1826e-02,  5.9663e-02, -1.2541e-02,
         -8.0403e-02,  5.4007e-02,  7.7804e-02, -8.8768e-02,  8.4942e-02,
          6.8150e-02, -1.0938e-04,  4.5138e-02,  5.2440e-02,  2.4461e-02,
          5.6560e-02, -1.5484e-01, -4.8219e-02,  2.5547e-02,  2.8438e-02,
          4.3409e-03, -4.0989e-02, -4.4987e-03,  8.5032e-02,  2.2438e-01,
          8.1776e-02,  7.7276e-02,  1.8689e-02,  1.7222e-02, -1.2081e-03,
         -9.5132e-02, -1.0281e-01,  6.2371e-02, -7.2781e-02, -4.1243e-02,
         -3.4226e-02, -9.0888e-02,  7.2759e-02,  3.5883e-02, -5.3531e-02,
          7.6112e-02, -1.1322e-01,  6.2381e-02,  1.0495e-01, -5.6912e-02,
         -1.5907e-02,  3.1215e-02,  1.5286e-01,  2.8818e-02, -1.7779e-01,
          1.2474e-01,  1.3218e-02, -6.0107e-02,  1.8906e-01,  3.7553e-02,
          3.5977e-03, -4.2132e-02, -5.4535e-02, -2.0946e-02,  2.5258e-01,
         -2.0237e-01, -3.2833e-02,  5.9046e-02, -8.6152e-02,  7.3371e-02,
          6.3933e-02,  2.8877e-02,  1.7339e-01, -6.6261e-02,  6.9105e-02,
         -4.1532e-02,  5.8307e-02,  1.3141e-01, -8.6859e-02,  6.8272e-02,
          4.4606e-02, -1.1560e-01, -6.9703e-02,  8.1646e-02,  9.6630e-02,
         -6.1417e-02, -7.6308e-02,  4.0114e-02, -1.3151e-02,  2.2515e-02,
         -5.4055e-02,  1.4760e-01,  3.4252e-02, -9.6371e-02,  1.7424e-01,
          3.2575e-02,  8.3073e-02,  6.6163e-02,  2.0060e-02,  3.8762e-02,
         -6.7596e-02,  9.9684e-02, -1.1280e-02, -5.9740e-02,  2.1700e-01,
          8.1276e-02,  1.0835e-01, -6.7580e-02,  7.5659e-02,  5.5416e-02,
          1.4139e-01,  1.1019e-02, -9.5694e-02,  2.4947e-02,  8.2935e-02,
         -3.4075e-02, -6.9290e-02,  1.3173e-01, -8.3181e-02,  3.2332e-02,
          8.4098e-02, -3.9687e-02, -2.8118e-02],
        [-8.8958e-02,  1.8525e-01, -4.1015e-02,  4.8439e-02,  7.9684e-02,
         -1.9939e-01, -6.5883e-04,  1.5796e-01, -8.0811e-02, -1.5011e-02,
         -1.6228e-02,  7.1653e-02,  1.5463e-01, -9.7692e-02, -1.5299e-02,
          1.0418e-01, -7.8712e-03,  2.6682e-02,  5.3893e-02,  8.5289e-02,
         -2.5466e-03,  9.0349e-02,  2.1694e-02,  1.1147e-01, -5.3440e-02,
         -2.8651e-02, -1.4655e-01,  1.1184e-02,  2.5751e-02,  7.3789e-02,
          8.1654e-02,  1.0748e-01, -6.1706e-02,  6.8349e-02, -6.0218e-02,
          1.2526e-01, -6.9871e-02,  6.7353e-02,  2.7468e-02, -7.1395e-03,
         -4.0304e-02,  1.2624e-01, -1.8050e-01, -8.7116e-02,  8.4152e-02,
          1.0509e-01,  7.3715e-02,  7.8842e-02, -1.7930e-01, -6.5154e-02,
          8.2074e-02, -2.6675e-01,  3.9160e-02, -8.3253e-02,  8.2792e-02,
         -3.0807e-02,  3.4497e-02,  1.1332e-01, -5.9143e-03,  1.6197e-01,
         -9.7887e-02,  6.5874e-02,  5.0210e-03,  1.8828e-01,  1.0693e-01,
         -2.3725e-02, -5.3369e-03,  3.6602e-02,  8.1067e-02, -1.2578e-01,
          1.8891e-01,  1.2811e-02, -2.0892e-03,  5.5106e-02, -1.4888e-01,
          3.2999e-02,  8.4717e-02, -1.3372e-01,  1.8924e-02,  8.0411e-02,
          4.5315e-03,  4.9873e-02, -1.3630e-01, -8.3298e-02,  3.6747e-02,
         -4.8090e-02,  3.1822e-02, -1.1462e-02,  4.2041e-02,  6.9570e-02,
         -9.6384e-03,  1.0875e-01, -1.3876e-02, -2.1456e-02, -7.1347e-02,
         -2.2828e-02,  1.4593e-02, -1.1555e-02,  1.9589e-02,  1.8734e-01,
         -7.0537e-02,  1.6070e-01,  1.0053e-01,  2.3380e-03,  2.5080e-01,
          3.7495e-02,  9.6497e-02,  1.0752e-01, -4.6321e-03,  6.9573e-02,
          2.5518e-02,  1.8486e-02,  1.7048e-01, -1.1075e-02, -2.6245e-02,
         -3.3734e-02,  9.5896e-02,  3.3373e-02, -6.0263e-02,  7.5581e-02,
         -1.3828e-03, -8.0382e-02, -1.5912e-02, -2.2378e-02,  6.3894e-02,
         -1.2293e-02,  6.1516e-02,  9.8126e-02]], device='cuda:0')), ('last_layer.bias', tensor([-0.0036, -0.0273], device='cuda:0'))])